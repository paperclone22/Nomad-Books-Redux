plugins {
	id "java"
	id "fabric-loom" version "1.8-SNAPSHOT"
	id "maven-publish"
	id "base"
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

base {
	archivesName = project.archives_base_name
}

version = project.mod_version
group = project.maven_group

repositories {
	maven {
		name "Parchment"
		url "https://maven.parchmentmc.org"
	}
	maven {
		url = "https://api.modrinth.com/maven"
	}
	mavenCentral()
}

//fabricApi {
//	configureDataGeneration()
//}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	//Parchment
	mappings loom.layered() {
		officialMojangMappings()
		parchment("org.parchmentmc.data:parchment-${project.parchment_version}@zip")
	}
	// MidnightLib config
	modImplementation "maven.modrinth:midnightlib:${project.midnightlib_version}"
}

processResources {
	inputs.property "version", project.version
	inputs.property "minecraft_version", project.minecraft_version
	inputs.property "loader_version", project.loader_version

	filesMatching("fabric.mod.json") {
		expand "version": project.version,
			"minecraft_version": project.minecraft_version,
			"loader_version": project.loader_version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
	}
}
